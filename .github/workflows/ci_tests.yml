name: CI Tests

on: [push, pull_request]

jobs:
  UnitTests:
    strategy:
      matrix:
        os: [ubuntu-16.04, windows-latest]
        buildType: [Debug, Release]
        standalone: [false, true]
        generator: ['Visual Studio 16 2019', 'MinGW Makefiles', 'Unix Makefiles']
        exclude:
          - os: ubuntu-16.04
            generator: MinGW Makefiles
          - os: ubuntu-16.04
            generator: Visual Studio 16 2019
          - os: windows-latest
            generator: Unix Makefiles
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v1
    - name: install cmake
      if: runner.os == 'ubuntu-16.04'
      run: |
        pip install cmake==3.13.3
        echo "::set-env name=PATH::$HOME/.local/bin:$PATH"
    - name: create standalone
      if: matrix.standalone
      shell: bash
      run: |
        bash tools/create_standalone.sh "$PWD/../nowide_standalone"
        rm -rf *
        cp -r ../nowide_standalone/* .
        mkdir build
    - name: configure
      working-directory: build
      run: cmake .. -DCMAKE_BUILD_TYPE=${{matrix.buildType}} -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/build/install -G "${{matrix.generator}}" -DCMAKE_SH="CMAKE_SH-NOTFOUND"
    - name: build
      run: cmake --build build --config ${{matrix.buildType}}
    # Run test with both bash and powershell and watch for "Using std::cin" on bash but not on powershell
    - name: test
      working-directory: build
      shell: bash
      run: ctest --output-on-failure -C ${{matrix.buildType}} --verbose
    - name: test
      working-directory: build
      shell: powershell
      if: runner.os == 'windows-latest'
      run: ctest --output-on-failure -C ${{matrix.buildType}} --verbose
    - name: install
      run: |
        cmake --build build --config ${{matrix.buildType}} --target install
        cat ${{runner.workspace}}/build/install/share/nowide/*
  CreateDocuTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Create documentation
        run: |
            sudo apt-get install -y doxygen
            bash doc/gendoc.sh
